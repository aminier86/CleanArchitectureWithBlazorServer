@using CleanArchitecture.Blazor.Server.UI.Themes
@using Microsoft.AspNetCore.Components.Authorization
@layout MainLayout
@inherits LayoutComponentBase
@inject IStringLocalizer<AuthLayout> L
@inject AuthenticationStateProvider AuthenticationStateProvider
@inject NavigationManager NavigationManager

<MudLayout>
    <AuthorizeView>
        <NotAuthorized>
            <MudContainer MaxWidth="MaxWidth.Small" Class="d-flex align-center" Style="height: 100vh;">
                <div class="d-flex flex-column mud-width-full">
                    <MudPaper Elevation="25" Class="pa-8" Width="100%" MaxWidth="500px">
                        <div class="d-flex justify-center mb-4">
                            <MudIcon Icon="@Icons.Material.TwoTone.Api" Color="Color.Primary" Size="Size.Large" Style="width:100px; height:100px;" />
                        </div>
                        @Body
                    </MudPaper>
                </div>
            </MudContainer>
        </NotAuthorized>
        <Authorized>
            <MudText Typo="Typo.body2">@L["Welcome back! You are already logged in. Redirecting to the home page"]</MudText>
        </Authorized>
    </AuthorizeView>
</MudLayout>


@code
{
    protected override async Task OnInitializedAsync()
    {
        // Check if the user is already authenticated
        var user = (await AuthenticationStateProvider.GetAuthenticationStateAsync()).User;
        if (user.Identity?.IsAuthenticated ?? false)
        {
            NavigationManager.NavigateTo("/");
        }

        await base.OnInitializedAsync();
    }
}